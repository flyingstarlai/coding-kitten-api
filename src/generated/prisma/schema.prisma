// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  role      Role      @default(TEACHER)
  createdAt DateTime  @default(now())
  deletedAt DateTime?

  classrooms  Classroom[]  @relation("TeacherClassrooms")
  enrollments Enrollment[]
  progresses  Mark[]
}

model Classroom {
  id          String    @id @default(cuid())
  name        String
  code        String    @unique
  teacher     User      @relation("TeacherClassrooms", fields: [teacherId], references: [id])
  teacherId   String
  createdAt   DateTime  @default(now())
  maxStudents Int       @default(30)
  deletedAt   DateTime?

  enrollments      Enrollment[]
  classroomCourses ClassroomCourse[]
}

model Enrollment {
  id          String    @id @default(cuid())
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String
  username    String
  student     User      @relation(fields: [studentId], references: [id])
  studentId   String
  invitedAt   DateTime  @default(now())
  joinedAt    DateTime?
  deletedAt   DateTime?

  @@unique([classroomId, username])
}

model Course {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  deletedAt   DateTime?

  assignments      Assignment[]
  classroomCourses ClassroomCourse[]
}

model Assignment {
  id          String    @id @default(cuid())
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String
  level       Int
  title       String
  description String?
  createdAt   DateTime  @default(now())
  deletedAt   DateTime?

  marks Mark[]
}

model ClassroomCourse {
  id          String    @id @default(cuid())
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String
  addedAt     DateTime  @default(now())
  deletedAt   DateTime?
}

model Mark {
  id           String     @id @default(cuid())
  student      User       @relation(fields: [studentId], references: [id])
  studentId    String
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId String
  stars        Int        @default(0)
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
}
